=begin
#Assessment Network API

#> Stores content for the Assessment Network  API Version is specified in the URL path as `api/<version>/resource` Version will default to the latest if it's ommited  All endpoints require an API key to be passed in the request header. API keys can be obtained by members at www.a15k.org. 

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for A15kClient::AccessTokensApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccessTokensApi' do
  before do
    # run before each test
    @instance = A15kClient::AccessTokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccessTokensApi' do
    it 'should create an instance of AccessTokensApi' do
      expect(@instance).to be_instance_of(A15kClient::AccessTokensApi)
    end
  end

  # unit tests for create_token
  # create  a token
  # 
  # @param token Access Token to be created
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'create_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tokens
  # Get all tokens
  # List all known tokens
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'get_tokens test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_token
  # update  a token
  # 
  # @param token Access Token to be updated
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'update_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
