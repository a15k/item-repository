=begin
#Assessment Network API

#> Stores content for the Assessment Network  API Version is specified in the URL path as `api/<version>/resource` Version will default to the latest if it's ommited  All endpoints require an API key to be passed in the request header. API keys can be obtained by members at www.a15k.org. 

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module A15kClient
  class AssessmentsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # create an assessment
    # 
    # @param assessment Assessment to be created
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2004]
    def create_assessment(assessment, opts = {})
      data, _status_code, _headers = create_assessment_with_http_info(assessment, opts)
      return data
    end

    # create an assessment
    # 
    # @param assessment Assessment to be created
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2004, Fixnum, Hash)>] InlineResponse2004 data, response status code and response headers
    def create_assessment_with_http_info(assessment, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AssessmentsApi.create_assessment ..."
      end
      # verify the required parameter 'assessment' is set
      if @api_client.config.client_side_validation && assessment.nil?
        fail ArgumentError, "Missing the required parameter 'assessment' when calling AssessmentsApi.create_assessment"
      end
      # resource path
      local_var_path = "/assessments"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(assessment)
      auth_names = ['api_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2004')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AssessmentsApi#create_assessment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve an assessment
    # 
    # @param id UUID of assessment to fetch
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2004]
    def get_assessment(id, opts = {})
      data, _status_code, _headers = get_assessment_with_http_info(id, opts)
      return data
    end

    # Retrieve an assessment
    # 
    # @param id UUID of assessment to fetch
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2004, Fixnum, Hash)>] InlineResponse2004 data, response status code and response headers
    def get_assessment_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AssessmentsApi.get_assessment ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling AssessmentsApi.get_assessment"
      end
      # resource path
      local_var_path = "/assessments/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2004')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AssessmentsApi#get_assessment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Search for assessments
    # 
    # @param q query to execute
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2004]
    def search_assessments(q, opts = {})
      data, _status_code, _headers = search_assessments_with_http_info(q, opts)
      return data
    end

    # Search for assessments
    # 
    # @param q query to execute
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2004, Fixnum, Hash)>] InlineResponse2004 data, response status code and response headers
    def search_assessments_with_http_info(q, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AssessmentsApi.search_assessments ..."
      end
      # verify the required parameter 'q' is set
      if @api_client.config.client_side_validation && q.nil?
        fail ArgumentError, "Missing the required parameter 'q' when calling AssessmentsApi.search_assessments"
      end
      # resource path
      local_var_path = "/assessments".sub('{' + 'q' + '}', q.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2004')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AssessmentsApi#search_assessments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
